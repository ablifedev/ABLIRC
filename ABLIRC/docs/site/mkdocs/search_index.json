{
    "docs": [
        {
            "location": "/",
            "text": "Introduce\n\n\nABLIRC is a workflow for peak-calling and analyzing CLIP-seq sequencing datasets.\n\n\nDownload\n\n\nDownload current release: \nABLIRC-1.0.0\n\n\nDownload example data:    \nABLIRC-example-data\n\n\nInstallation\n\n\nThe program only works on linux platform, before the installation, both python2 and python3 are required, during the installation, the program will create a new virtual environment for python, and all the relevant toolkits will be installed in this virtual environment. Process will check the current environment to find the dependent packages, if not found, the pocess will install them by pip, CPAN automatically, so make sure your network connection activity. Besides, there are some repuired tools which need for manual installation, all the requirements are as followed:  \n\n\nRequired software:\n\n\n\n\n\n\nPerl (>=5.10, https://www.perl.org/get.html)\n\n\n\n\n\n\nPython2 (>=2.7, https://www.python.org/downloads/)\n\n\n\n\n\n\nPython3 (>=3.3, https://www.python.org/downloads/)\n\n\n\n\n\n\nR (>=3.2.0, https://cloud.r-project.org/)\n\n\n\n\n\n\nSamtools (>=1.2, http://www.htslib.org/download/)\n\n\n\n\n\n\nbedtools (http://bedtools.readthedocs.io/en/latest/)\n\n\n\n\n\n\nBowtie2 (>=2.2.5, http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)\n\n\n\n\n\n\nTopHat2 (>=2.0.13, http://ccb.jhu.edu/software/tophat/index.shtml)\n\n\n\n\n\n\nFASTX-Toolkit (>=0.013, http://hannonlab.cshl.edu/fastx_toolkit/)\n\n\n\n\n\n\nRequired R packages:\n\n\n\n\n\n\nggplot2  \n\n\n\n\n\n\nreshape2  \n\n\n\n\n\n\nplotrix  \n\n\n\n\n\n\nmethods  \n\n\n\n\n\n\ncorrplot  \n\n\n\n\n\n\nRColorBrewer  \n\n\n\n\n\n\nGtable  \n\n\n\n\n\n\nGrid  \n\n\n\n\n\n\nAfter all of the requirments being installed, you can install the program as followed:   \n\n\n\n\n\n\nUnzip the file \nABLIRC.tar.gz\n: \n\n\ntar -zxf ABLIRC.tar.gz\n   \n\n\n\n\n\n\nWritting the path of python2 and python3 to the python2_path file and python3_path file.\n\n    a) Open the ABLIRC root folder: \n\n\ncd install/\n \n\n\nvi python2_path\n\n\nvi python3_path\n   \n\n\nb) Open the ABLIRC root folder: \n\n\nmake\n  \n\n\n\n\n\n\nUsage\n\n\nFirst time to run the program,you can by the fowlling steps:  \n\n\n\n\n\n\nStep1:\n\ncp the configuration file \nclipseq.config.sample\n to you workdir:\n\n\ncp clipseq.config.sample <workdir>\n  \n\n\n\n\n\n\nStep2:\n\nFill in the configuration file correctly fill in the parameters according to the information in the configuration file, which parameter starts with a \n*\n is required , it means there is no default value with it ,you should fill it with you data information or chose correctly value according to you task, specific requirements will be detailed in the annotation. The other parameters are optional parameters, It is recommended to use the default value, all the required parameters are divided into the following parts:\n\n\na) Select whether to use the sge cluster for the calculation, if sge is already installed on your platform, you could fill \nusesge=yes\n, and determine the number of nodes and CPUs used by sge. Else, the task will be running with multi-process at a single node. (reference parameters: usesge, cpu, sgequeue)\n\nb) definitions about you clip data, fill in the folder where the full path, the name of each file and definite the corresponding sample name, make sure that each of you clipseq-data-file following the lines of SAMPLE. (reference parameters: indir, library-type,sample1,sample2...)\n\nc) Modify the specific parameters of each module as needed. More details of the parameters, please refer to the comments in the config file.  \n\n\n\n\n\n\nStep3:\n\nRun the ABLIRC : Make sure the \nrunPipe\n in you path configure or you can use absolute path , then you can run the ABLIRC like this:\n\n\nrunPipe -c clipseq_config.sample\n  \n\n\n\n\n\n\nConfig file template\n\n\nYou can copy and modify this config template.\n\n\n#===================================================================#\n#================= Globle config and Genome config =================#\n#===================================================================#\n[gc]\n\n# Project infomation, for Report front cover\nTitle = Clip-seq Analyze with ABLIRC\nInstitutions = Example Lab\nReportdate = 2015-5-20\n\n# If filled 'T', The program only generates commands , but the command is not executed,if filled 'F', the command will be executed immediately after generation.\nmake-cmd-only = F\n\n# Genome ID used in the analysis, genomeinfo table should be filled. (genomeinfo.xls)\nGenomeID = human_gencode_v23\n\n# decide whether to use the sge server for qsub task delivery, if you have installed sge, fill 'yes', the task will be distributed to each node through the qsub, otherwise fill 'no', the task will be running with multi-threaded at a single node.\nusesge = yes\n\n# number of CPUs to use, if you choose to use sge, then the number of CPU is the maximum number of threads used.\ncpu = 16\n\n# The delivery node, it was needed if 'useage' is yes.\nsgequeue = new.q\n\n#======================================================#\n#================= Sample information =================#\n#======================================================#\n[sample]\n\n# fullname of the clipseq data input-dir-path.\nindir = /data12/dev/magl/updata_pipeline/ablifedev/clipseq/reads\n\n# choose whether the library was build on strand, fill 'strand' or 'unstrand'\nlibrary-type = unstrand\n\n# name the each sample, the naming rules is 'sampleX = sample alias: sample file name'\uff0cyou must list all you samples in the list, and specify an alias for each of them, all the alias must be different.\nSAMPLE1 = Eif3b_1:HEK293_Eif3b_1st.fq\nSAMPLE2 = Eif3b_2:HEK293_Eif3b_2nd.fq\nSAMPLE3 = IgG_1:HEK293_IgG_1st.fq\nSAMPLE4 = IgG_2:HEK293_IgG_2nd.fq\n\n# You must define the groups, normally, the sample and its control sample may be placed in a group. You can list all you samples with many groups, each group will be generated a result of callpeak.\nGROUP1 = Eif3b_1:IgG_1\nGROUP2 = Eif3b_2:IgG_2\n\n#======================================================#\n#======== Modules setting[module:modulename] ==========#\n#======================================================#\n# The following sections describe the parameter settings for each module\n\n\n\n# Clean the raw reads, Remove unqualified reads.\n[module:cleanreads]\n#The execution order of this module\norder = 1\nid = clean\n\n#whether skip the module,if is \"F\" , this module will be executed normal,if is \"T\", this module will be skipped, even not make a commamd.\nskip = F\no:cleanreads_dir\no:rawstat\n\n# Select a part of the reads to test and evaluate the quality of the data.\n[module:testreads]\norder = 2\nid = statics\nskip = F\ncleanreads_dir = source|clean:cleanreads_dir\nrawstat = source|clean:rawstat\no:statics_dir\n\n# Analysis of data quality statistics by fastqc.\n[module:fastqc]\norder = 2\nskip = F\n\n# Align sequence to the genome, The mapping tool used is Tophat2, you can set the parameters below.\n[module:mapping_tophat2]\nid = mapping__tophat2\norder = 2\nskip = F\n# most threads to use.\nthreads = 5\n# Maximum number of mismatches.\nreadmis = 2\n# Maximum number of mismatches to bowtie2.\nb2mis = 1\n# You can add any tophat or bowtie2 parameters on this line,they will be executed during the Tophat2 running.\nother_argv = -a 8 -m 0 -g 2 -p 12 --microexon-search --no-coverage-search --report-secondary-alignments\n\n# The definition of the output files, they are needed by the downstream modules. We recommend that you do not modify them.\no:uniqbam\no:mapresult\n\n# Convert the resulting bam file to a bed file, and remove the duplication results, the output will be used to callpeak.\n[module:bam2bed]\nid = mapping__bam2bed\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\no:rmdup_uniq_bam\no:rmdup_uniq_bed\n\n# Statistical information on the different regions of the gene annotation file.\n[module:gff]\norder = 3\nskip = F\n\n# According to the results of mapping, statistics the distribution of regions where reads aligned on the genome.\n[module:mapregion]\nid = basic__mapregion\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\nmapresult = source|mapping__tophat2:mapresult\n\n# According to the results of mapping, statistics the distribution of the distance between reads and TSS,TTS.\n[module:distance2xxx]\nid = basic__distance2xxx\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\n\n# According to the results of mapping, calulate the expression of each genes.\n[module:exp]\nid = basic__exp\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\n\n# The basic analysis of the clipseq, the correlation between the individual samples is calculated.\n[module:clip_basic]\nid = basic__clip_basic\norder = 4\nskip = F\nmin_sum_rpkm = 0.3\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\n#raw_pas_bam = source|filter_pas_reads:raw_pas_bam\n#o:pas_bam_discardip\n\n# This module is used to callpeak, make sure the module 'mapping_tophat2' has been runned and the output file 'rmdup_uniq_bed' and 'rmdup_uniq_bam' are exist. If you have listed your samples into groups previously, each group would be generated a result of callpeak. Besides, you can compare the difference of the callpeak result between two groups, you just need fill the parameter 'ablife_groupX', notice that the two group was connected with a ':', samples in each group was connected with a \"_vs_\".\n[module:clip_callpeak_ablife]\nid = clip_callpeak__ablife\norder = 4\nskip = F\n\nuniqbed = source|mapping__bam2bed:rmdup_uniq_bed\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\no:peakfa\no:peakinfo\no:nonoverlap_peaks\no:peakreads\no:peaksense\no:peakantisense\n\n\n# This module is used to statistics the result of callpeak. Calculate the sense and antisense peaks, compare overlap peaks between different groups.\n[module:clip_stat]\nid = clip_callpeak__stat\norder = 7\nskip = F\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\npeakinfo1 = source|clip_callpeak__ablife:peakinfo\npeak_nonoverlap1 = source|clip_callpeak__ablife:nonoverlap_peaks\npeakreads1 = source|clip_callpeak__ablife:peakreads\npeaksense = source|clip_callpeak__ablife:peaksense\npeakantisense = source|clip_callpeak__ablife:peakantisense\n\n# Find the motif sequences according to the callpeak result.\n[module:clip_findmotifs]\nid = clip_callpeak__findmotifs\norder = 7\nskip = F\npeakfa_ablife = source|clip_callpeak__ablife:peakfa\n\n# Plot a diagram by circos, which showing the distribution of the peaks on the genome. \n[module:clip_plot]\nid = clip_plot\norder = 8\nskip = F\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\npeakinfo1 = source|clip_callpeak__ablife:peakinfo\n\n# Generate a report of the result.\n[module:clip_report]\nid = report\norder = 9\nskip = F\nTemplate = CLIP-seq.template\nClean_INFO = clean_info.txt\nSample_INFO = sample_info.txt\n\n# Appendix.\nSup0 = Reference_genome\nSup1 = Library\nSup2 = Quality_control\nSup3 = Mapping\nSup4 = Correlation\nSup5 = Peak_and_peak_gene\nSup6 = Motif_results\nSup7 = Peak_gene_function",
            "title": "Manual"
        },
        {
            "location": "/#introduce",
            "text": "ABLIRC is a workflow for peak-calling and analyzing CLIP-seq sequencing datasets.",
            "title": "Introduce"
        },
        {
            "location": "/#download",
            "text": "Download current release:  ABLIRC-1.0.0  Download example data:     ABLIRC-example-data",
            "title": "Download"
        },
        {
            "location": "/#installation",
            "text": "The program only works on linux platform, before the installation, both python2 and python3 are required, during the installation, the program will create a new virtual environment for python, and all the relevant toolkits will be installed in this virtual environment. Process will check the current environment to find the dependent packages, if not found, the pocess will install them by pip, CPAN automatically, so make sure your network connection activity. Besides, there are some repuired tools which need for manual installation, all the requirements are as followed:    Required software:    Perl (>=5.10, https://www.perl.org/get.html)    Python2 (>=2.7, https://www.python.org/downloads/)    Python3 (>=3.3, https://www.python.org/downloads/)    R (>=3.2.0, https://cloud.r-project.org/)    Samtools (>=1.2, http://www.htslib.org/download/)    bedtools (http://bedtools.readthedocs.io/en/latest/)    Bowtie2 (>=2.2.5, http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)    TopHat2 (>=2.0.13, http://ccb.jhu.edu/software/tophat/index.shtml)    FASTX-Toolkit (>=0.013, http://hannonlab.cshl.edu/fastx_toolkit/)    Required R packages:    ggplot2      reshape2      plotrix      methods      corrplot      RColorBrewer      Gtable      Grid      After all of the requirments being installed, you can install the program as followed:       Unzip the file  ABLIRC.tar.gz :   tar -zxf ABLIRC.tar.gz        Writting the path of python2 and python3 to the python2_path file and python3_path file. \n    a) Open the ABLIRC root folder:   cd install/    vi python2_path  vi python3_path      b) Open the ABLIRC root folder:   make",
            "title": "Installation"
        },
        {
            "location": "/#usage",
            "text": "First time to run the program,you can by the fowlling steps:      Step1: \ncp the configuration file  clipseq.config.sample  to you workdir:  cp clipseq.config.sample <workdir>       Step2: \nFill in the configuration file correctly fill in the parameters according to the information in the configuration file, which parameter starts with a  *  is required , it means there is no default value with it ,you should fill it with you data information or chose correctly value according to you task, specific requirements will be detailed in the annotation. The other parameters are optional parameters, It is recommended to use the default value, all the required parameters are divided into the following parts:  a) Select whether to use the sge cluster for the calculation, if sge is already installed on your platform, you could fill  usesge=yes , and determine the number of nodes and CPUs used by sge. Else, the task will be running with multi-process at a single node. (reference parameters: usesge, cpu, sgequeue) \nb) definitions about you clip data, fill in the folder where the full path, the name of each file and definite the corresponding sample name, make sure that each of you clipseq-data-file following the lines of SAMPLE. (reference parameters: indir, library-type,sample1,sample2...) \nc) Modify the specific parameters of each module as needed. More details of the parameters, please refer to the comments in the config file.      Step3: \nRun the ABLIRC : Make sure the  runPipe  in you path configure or you can use absolute path , then you can run the ABLIRC like this:  runPipe -c clipseq_config.sample",
            "title": "Usage"
        },
        {
            "location": "/#config-file-template",
            "text": "You can copy and modify this config template.  #===================================================================#\n#================= Globle config and Genome config =================#\n#===================================================================#\n[gc]\n\n# Project infomation, for Report front cover\nTitle = Clip-seq Analyze with ABLIRC\nInstitutions = Example Lab\nReportdate = 2015-5-20\n\n# If filled 'T', The program only generates commands , but the command is not executed,if filled 'F', the command will be executed immediately after generation.\nmake-cmd-only = F\n\n# Genome ID used in the analysis, genomeinfo table should be filled. (genomeinfo.xls)\nGenomeID = human_gencode_v23\n\n# decide whether to use the sge server for qsub task delivery, if you have installed sge, fill 'yes', the task will be distributed to each node through the qsub, otherwise fill 'no', the task will be running with multi-threaded at a single node.\nusesge = yes\n\n# number of CPUs to use, if you choose to use sge, then the number of CPU is the maximum number of threads used.\ncpu = 16\n\n# The delivery node, it was needed if 'useage' is yes.\nsgequeue = new.q\n\n#======================================================#\n#================= Sample information =================#\n#======================================================#\n[sample]\n\n# fullname of the clipseq data input-dir-path.\nindir = /data12/dev/magl/updata_pipeline/ablifedev/clipseq/reads\n\n# choose whether the library was build on strand, fill 'strand' or 'unstrand'\nlibrary-type = unstrand\n\n# name the each sample, the naming rules is 'sampleX = sample alias: sample file name'\uff0cyou must list all you samples in the list, and specify an alias for each of them, all the alias must be different.\nSAMPLE1 = Eif3b_1:HEK293_Eif3b_1st.fq\nSAMPLE2 = Eif3b_2:HEK293_Eif3b_2nd.fq\nSAMPLE3 = IgG_1:HEK293_IgG_1st.fq\nSAMPLE4 = IgG_2:HEK293_IgG_2nd.fq\n\n# You must define the groups, normally, the sample and its control sample may be placed in a group. You can list all you samples with many groups, each group will be generated a result of callpeak.\nGROUP1 = Eif3b_1:IgG_1\nGROUP2 = Eif3b_2:IgG_2\n\n#======================================================#\n#======== Modules setting[module:modulename] ==========#\n#======================================================#\n# The following sections describe the parameter settings for each module\n\n\n\n# Clean the raw reads, Remove unqualified reads.\n[module:cleanreads]\n#The execution order of this module\norder = 1\nid = clean\n\n#whether skip the module,if is \"F\" , this module will be executed normal,if is \"T\", this module will be skipped, even not make a commamd.\nskip = F\no:cleanreads_dir\no:rawstat\n\n# Select a part of the reads to test and evaluate the quality of the data.\n[module:testreads]\norder = 2\nid = statics\nskip = F\ncleanreads_dir = source|clean:cleanreads_dir\nrawstat = source|clean:rawstat\no:statics_dir\n\n# Analysis of data quality statistics by fastqc.\n[module:fastqc]\norder = 2\nskip = F\n\n# Align sequence to the genome, The mapping tool used is Tophat2, you can set the parameters below.\n[module:mapping_tophat2]\nid = mapping__tophat2\norder = 2\nskip = F\n# most threads to use.\nthreads = 5\n# Maximum number of mismatches.\nreadmis = 2\n# Maximum number of mismatches to bowtie2.\nb2mis = 1\n# You can add any tophat or bowtie2 parameters on this line,they will be executed during the Tophat2 running.\nother_argv = -a 8 -m 0 -g 2 -p 12 --microexon-search --no-coverage-search --report-secondary-alignments\n\n# The definition of the output files, they are needed by the downstream modules. We recommend that you do not modify them.\no:uniqbam\no:mapresult\n\n# Convert the resulting bam file to a bed file, and remove the duplication results, the output will be used to callpeak.\n[module:bam2bed]\nid = mapping__bam2bed\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\no:rmdup_uniq_bam\no:rmdup_uniq_bed\n\n# Statistical information on the different regions of the gene annotation file.\n[module:gff]\norder = 3\nskip = F\n\n# According to the results of mapping, statistics the distribution of regions where reads aligned on the genome.\n[module:mapregion]\nid = basic__mapregion\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\nmapresult = source|mapping__tophat2:mapresult\n\n# According to the results of mapping, statistics the distribution of the distance between reads and TSS,TTS.\n[module:distance2xxx]\nid = basic__distance2xxx\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\n\n# According to the results of mapping, calulate the expression of each genes.\n[module:exp]\nid = basic__exp\norder = 3\nskip = F\nuniqbam = source|mapping__tophat2:uniqbam\n\n# The basic analysis of the clipseq, the correlation between the individual samples is calculated.\n[module:clip_basic]\nid = basic__clip_basic\norder = 4\nskip = F\nmin_sum_rpkm = 0.3\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\n#raw_pas_bam = source|filter_pas_reads:raw_pas_bam\n#o:pas_bam_discardip\n\n# This module is used to callpeak, make sure the module 'mapping_tophat2' has been runned and the output file 'rmdup_uniq_bed' and 'rmdup_uniq_bam' are exist. If you have listed your samples into groups previously, each group would be generated a result of callpeak. Besides, you can compare the difference of the callpeak result between two groups, you just need fill the parameter 'ablife_groupX', notice that the two group was connected with a ':', samples in each group was connected with a \"_vs_\".\n[module:clip_callpeak_ablife]\nid = clip_callpeak__ablife\norder = 4\nskip = F\n\nuniqbed = source|mapping__bam2bed:rmdup_uniq_bed\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\no:peakfa\no:peakinfo\no:nonoverlap_peaks\no:peakreads\no:peaksense\no:peakantisense\n\n\n# This module is used to statistics the result of callpeak. Calculate the sense and antisense peaks, compare overlap peaks between different groups.\n[module:clip_stat]\nid = clip_callpeak__stat\norder = 7\nskip = F\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\npeakinfo1 = source|clip_callpeak__ablife:peakinfo\npeak_nonoverlap1 = source|clip_callpeak__ablife:nonoverlap_peaks\npeakreads1 = source|clip_callpeak__ablife:peakreads\npeaksense = source|clip_callpeak__ablife:peaksense\npeakantisense = source|clip_callpeak__ablife:peakantisense\n\n# Find the motif sequences according to the callpeak result.\n[module:clip_findmotifs]\nid = clip_callpeak__findmotifs\norder = 7\nskip = F\npeakfa_ablife = source|clip_callpeak__ablife:peakfa\n\n# Plot a diagram by circos, which showing the distribution of the peaks on the genome. \n[module:clip_plot]\nid = clip_plot\norder = 8\nskip = F\nuniqbam = source|mapping__bam2bed:rmdup_uniq_bam\npeakinfo1 = source|clip_callpeak__ablife:peakinfo\n\n# Generate a report of the result.\n[module:clip_report]\nid = report\norder = 9\nskip = F\nTemplate = CLIP-seq.template\nClean_INFO = clean_info.txt\nSample_INFO = sample_info.txt\n\n# Appendix.\nSup0 = Reference_genome\nSup1 = Library\nSup2 = Quality_control\nSup3 = Mapping\nSup4 = Correlation\nSup5 = Peak_and_peak_gene\nSup6 = Motif_results\nSup7 = Peak_gene_function",
            "title": "Config file template"
        }
    ]
}